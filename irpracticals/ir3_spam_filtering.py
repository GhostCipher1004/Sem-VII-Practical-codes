# -*- coding: utf-8 -*-
"""IR3 : spam filtering.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dKFNqG06Hg4MOG9RYHSDCYLYZ0nKkVua
"""

# Email Spam Filtering using Naive Bayes
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, classification_report

df = pd.read_csv("spam.csv", encoding='latin-1')
df = df[['v1', 'v2']]
df.columns = ['label', 'message']

df['label'] = df['label'].map({'ham': 0, 'spam': 1})

X_train, X_test, y_train, y_test = train_test_split(df['message'], df['label'], test_size=0.2, random_state=42)

cv = CountVectorizer(stop_words='english')
X_train_cv = cv.fit_transform(X_train)
X_test_cv = cv.transform(X_test)

model = MultinomialNB()
model.fit(X_train_cv, y_train)

y_pred = model.predict(X_test_cv)

print("Accuracy:", accuracy_score(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))

sample = ["Congratulations! You've won a $500 Walmart gift card. Click here to claim."]
sample_vec = cv.transform(sample)
print("\nPrediction for sample:", model.predict(sample_vec))  # 1 means spam